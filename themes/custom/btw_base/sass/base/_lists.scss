//----------------------------------------------
//
//	LISTS - general styles for ordered and 
//          unordered lists and grids
//
//	location: 
//      /sass/base/_lists.scss
//
//----------------------------------------------


/*-------------------------------------------

 LISTS - defaults for standard formatting

--------------------------------------------*/

ol {
	li {
		list-style-type: decimal;
	}
	
	ol {
		padding-top: 0.5em;
		
		li {
			list-style-type: upper-roman;
		}
	}
}

ul {
	li {
		list-style: disc;
	}
	
	ul {
		padding-top: 0.5em;
		
		li {
			list-style: circle;
		}
	}
}

.node {
	ol,
	ul {
		padding-left: 2em;
	}
}

//--------------------------
//	Definition Lists
//--------------------------

dt, 
.admin h3 {
	font-size: 1.125rem;
	margin: 0;
}

dd {
	padding-left: 10px;
	font-size: 0.938rem;
	font-style: italic;
	margin-bottom: 20px;
}

//--------------------------
//	LIST formatting classes
//--------------------------

.upper-roman {
	list-style-type: upper-roman;
	font-size: 18px;

	> li {
		list-style-type: upper-roman;
		padding-left: 8px;
	}
}	
.upper-alpha {
	list-style-type: upper-alpha;

	> li {
		list-style-type: upper-alpha;
		padding-left: 8px;
	}
}	
.decimal {
	list-style-type: decimal;

	> li {
		list-style-type: decimal;
		padding-left: 8px;
	}
}

//---------------------------------------------------------
//---------------------------------------------------------
//
//	LIST & GRID styles - without standard list formatting
//  
//---------------------------------------------------------
//---------------------------------------------------------

//----------------------------------
//
//	FLEXBOX GRID -- for items to display 
//			in a grid layout using
//			FLEXBOX ONLY specs
// 
//----------------------------------

.grid {
	// resets values for when class is placed on <ul>
	margin: 0 0 3rem 0;
	padding: 0;
	
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;	
    
    li,
	.grid-item {
		list-style-type: none;

		@include breakpoint($small-only) {
			@include flexgrid-1;
		}
		@include breakpoint($medium-up) {
			@include flexgrid-2;
		}
		@include breakpoint($large-up) {
			@include flexgrid-3;
		}
		@include breakpoint($xlarge-up) {
			@include flexgrid-4;
		}
	}
}

//----------------------------------
//
//	CSS GRID -- for items to display 
//				in a grid layout using
//				CSS GRID specs
// 
//----------------------------------

.css-grid {
	// resets values for when class is placed on <ul>
	margin: 0 0 3rem 0;
	padding: 0;
	
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	
	// if the browser supports css grid, then...
	@supports (display:grid) {
		display: grid;
		grid-template-columns: repeat(auto-fit,minmax(250px, 1fr));
		grid-gap: 40px 3.8%;
	}	
    
    li,
	.grid-item {
		list-style-type: none;
		padding: 0;
		margin: 0;
		position: relative;
	}
	
	// for flexbox fallback if css grid not supported
	@supports not (display:grid) {
		.grid-item {
			@include breakpoint($small-only) {
				@include flexgrid-1;
			}
			@include breakpoint($medium-up) {
				@include flexgrid-2;
			}
			@include breakpoint($large-up) {
				@include flexgrid-3;
			}
			@include breakpoint($xlarge-up) {
				@include flexgrid-4;
			}
		}
	}
}

	

//----------------------------------
//
//	LISTS - items to display top-bottom
//
//----------------------------------

.list {
	padding: 0;
	
	ul {
		margin: 0;
		padding: 0;
	}
	
	.list-item {
		padding: $vert-spacing-unit/2 0;
		@include border-bottom($border-color);
		list-style-type: none;
		margin: 0;
		position: relative;
		overflow: hidden;
		
		&:first-child {
			padding-top: 0;
		}
		&:last-child {
			border-bottom: 0;
		}
	}
}